{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,sB,aCIxDC,IAAAA,aAAAA,IAAqB,sCAAsC,YACzDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAuB,SAAS,WACrC,IAAIC,EACAC,EAEJC,OAAOC,iBAAiB,WAAW,WACjCN,IAAAA,OAAAA,QAAmBI,GACnBD,EAAQH,IAAAA,OAAAA,KACN,CACEO,KAAM,OACNC,aAAa,GAEfR,IAAAA,WAAAA,MAAqB,iDAIzBK,OAAOC,iBAAiB,UAAU,WAChCN,IAAAA,OAAAA,QAAmBG,GACnBC,EAAYJ,IAAAA,OAAAA,KACV,CACEO,KAAM,UACNC,aAAa,GAEfR,IAAAA,WAAAA,MAAqB,uD","sources":["webpack://@datlechin/flarum-offline-indicator/webpack/bootstrap","webpack://@datlechin/flarum-offline-indicator/webpack/runtime/compat get default export","webpack://@datlechin/flarum-offline-indicator/webpack/runtime/define property getters","webpack://@datlechin/flarum-offline-indicator/webpack/runtime/hasOwnProperty shorthand","webpack://@datlechin/flarum-offline-indicator/webpack/runtime/make namespace object","webpack://@datlechin/flarum-offline-indicator/external root \"flarum.core.compat['forum/app']\"","webpack://@datlechin/flarum-offline-indicator/external root \"flarum.core.compat['common/extend']\"","webpack://@datlechin/flarum-offline-indicator/external root \"flarum.core.compat['common/Application']\"","webpack://@datlechin/flarum-offline-indicator/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Application'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Application from 'flarum/common/Application';\n\napp.initializers.add('datlechin/flarum-offline-indicator', () => {\n  extend(Application.prototype, 'mount', function () {\n    let alert;\n    let connected;\n\n    window.addEventListener('offline', () => {\n      app.alerts.dismiss(connected);\n      alert = app.alerts.show(\n        {\n          type: 'info',\n          dismissible: false,\n        },\n        app.translator.trans('datlechin-offline-indicator.forum.offline')\n      );\n    });\n\n    window.addEventListener('online', () => {\n      app.alerts.dismiss(alert);\n      connected = app.alerts.show(\n        {\n          type: 'success',\n          dismissible: true,\n        },\n        app.translator.trans('datlechin-offline-indicator.forum.online')\n      );\n    });\n  });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","Application","alert","connected","window","addEventListener","type","dismissible"],"sourceRoot":""}